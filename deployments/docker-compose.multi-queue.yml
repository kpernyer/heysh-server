version: '3.8'

services:
  # AI Processing Worker - Requires GPU
  ai-worker:
    build:
      context: ../
      dockerfile: deployments/Dockerfile.ai-worker
    environment:
      WORKER_TYPES: "ai-processing"
      TEMPORAL_ADDRESS: ${TEMPORAL_ADDRESS:-temporal:7233}
      TEMPORAL_NAMESPACE: ${TEMPORAL_NAMESPACE:-default}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 16G
          cpus: '4'
    networks:
      - temporal-network
    depends_on:
      - temporal

  # Storage Worker - Fast disk I/O
  storage-worker:
    build:
      context: ../
      dockerfile: deployments/Dockerfile.storage-worker
    environment:
      WORKER_TYPES: "storage"
      TEMPORAL_ADDRESS: ${TEMPORAL_ADDRESS:-temporal:7233}
      TEMPORAL_NAMESPACE: ${TEMPORAL_NAMESPACE:-default}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      WEAVIATE_URL: ${WEAVIATE_URL}
      NEO4J_URI: ${NEO4J_URI}
      NEO4J_USER: ${NEO4J_USER}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
    volumes:
      - document-cache:/app/cache
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2'
      replicas: 2
    networks:
      - temporal-network
      - database-network
    depends_on:
      - temporal
      - weaviate
      - neo4j

  # General Worker - Lightweight
  general-worker:
    build:
      context: ../
      dockerfile: deployments/Dockerfile
    environment:
      WORKER_TYPES: "general"
      TEMPORAL_ADDRESS: ${TEMPORAL_ADDRESS:-temporal:7233}
      TEMPORAL_NAMESPACE: ${TEMPORAL_NAMESPACE:-default}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2'
      replicas: 3
    networks:
      - temporal-network
    depends_on:
      - temporal

  # Temporal Server
  temporal:
    image: temporalio/auto-setup:latest
    ports:
      - "7233:7233"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgres
    networks:
      - temporal-network
      - database-network
    depends_on:
      - postgres

  # PostgreSQL for Temporal
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - database-network

  # Weaviate Vector Database
  weaviate:
    image: semitechnologies/weaviate:latest
    ports:
      - "8090:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      ENABLE_MODULES: 'text2vec-openai'
      OPENAI_APIKEY: ${OPENAI_API_KEY}
    volumes:
      - weaviate-data:/var/lib/weaviate
    networks:
      - database-network

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: ${NEO4J_USER}/${NEO4J_PASSWORD}
      NEO4J_dbms_memory_pagecache_size: 2G
      NEO4J_dbms_memory_heap_max__size: 2G
    volumes:
      - neo4j-data:/data
    networks:
      - database-network

networks:
  temporal-network:
    driver: bridge
  database-network:
    driver: bridge

volumes:
  postgres-data:
  weaviate-data:
  neo4j-data:
  document-cache:
