#!/bin/bash

# Export Supabase database for local development seeding
# This script exports your current Supabase database to be used as seed data

set -e

echo "🗄️ Exporting Supabase database for local development..."

# Check if required environment variables are set
if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
    echo "❌ Error: SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY environment variables must be set"
    echo "   You can find these in your Supabase project settings"
    exit 1
fi

# Create seed data directory if it doesn't exist
mkdir -p docker/seed-data/postgres

# Extract database connection details from Supabase URL
# Supabase URL format: https://your-project-ref.supabase.co
DB_HOST=$(echo $SUPABASE_URL | sed 's/https:\/\///' | sed 's/\.supabase\.co//')
DB_NAME="postgres"
DB_USER="postgres"
DB_PASSWORD="$SUPABASE_SERVICE_ROLE_KEY"

echo "📊 Exporting database schema and data..."

# Export schema
echo "📋 Exporting schema..."
pg_dump \
    --host="$DB_HOST.supabase.co" \
    --port=5432 \
    --username=postgres \
    --dbname=postgres \
    --schema-only \
    --no-owner \
    --no-privileges \
    --file=docker/seed-data/postgres/01-schema.sql

# Export data (excluding system tables)
echo "📦 Exporting data..."
pg_dump \
    --host="$DB_HOST.supabase.co" \
    --port=5432 \
    --username=postgres \
    --dbname=postgres \
    --data-only \
    --no-owner \
    --no-privileges \
    --exclude-table=spatial_ref_sys \
    --exclude-table=geography_columns \
    --exclude-table=geometry_columns \
    --exclude-table=raster_columns \
    --exclude-table=raster_overviews \
    --file=docker/seed-data/postgres/02-data.sql

# Create a combined initialization script
echo "🔧 Creating initialization script..."
cat > docker/seed-data/postgres/init.sql << 'EOF'
-- Initialize database with seed data
-- This file is automatically generated from Supabase export

-- Create database if it doesn't exist
SELECT 'CREATE DATABASE temporal'
WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'temporal')\gexec

-- Connect to temporal database
\c temporal;

-- Create extensions
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS "pgcrypto";

-- Import schema and data
\i /docker-entrypoint-initdb.d/01-schema.sql
\i /docker-entrypoint-initdb.d/02-data.sql

-- Set up proper permissions
GRANT ALL PRIVILEGES ON DATABASE temporal TO temporal;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO temporal;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO temporal;
EOF

echo "✅ Supabase database exported successfully!"
echo "📁 Files created:"
echo "   - docker/seed-data/postgres/01-schema.sql"
echo "   - docker/seed-data/postgres/02-data.sql"
echo "   - docker/seed-data/postgres/init.sql"
echo ""
echo "🚀 Next steps:"
echo "   1. Review the exported files"
echo "   2. Run 'just up-infra' to test with seeded data"
echo "   3. Use 'just export-db' to update seed data when needed"
